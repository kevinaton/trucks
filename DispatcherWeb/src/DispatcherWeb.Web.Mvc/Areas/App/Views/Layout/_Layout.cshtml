@using System.Globalization
@using Abp.AspNetCore.Mvc.Caching
@using Abp.AspNetZeroCore.Timing
@using Abp.CachedUniqueKeys
@using Abp.Configuration
@using Abp.MultiTenancy
@using Abp.Web.Mvc.Alerts
@using DispatcherWeb.Features
@using DispatcherWeb.Web.Resources
@using Abp.Web.Security.AntiForgery
@using DispatcherWeb.Configuration
@using DispatcherWeb.Url
@using DispatcherWeb.Web.Areas.App.Models.Layout
@using DispatcherWeb.Web.Session
@using CultureHelper = DispatcherWeb.Localization.CultureHelper
@inject ScriptPaths ScriptPaths
@inject AppTimes AppTimes
@inject IAbpAntiForgeryManager AbpAntiForgeryManager
@inject IWebUrlService WebUrlService
@inject IPerRequestSessionCache SessionCache
@inject IAlertManager AlertManager
@inject ICachedUniqueKeyPerUser CachedUniqueKeyPerUser
@inject IGetScriptsResponsePerUserConfiguration GetScriptsResponsePerUserConfiguration
@{
    AbpAntiForgeryManager.SetCookie(Context);

    var isChatEnabled = AbpSession.MultiTenancySide == MultiTenancySides.Host || IsFeatureEnabled(AppFeatures.ChatFeature);
    var headerViewModel = new HeaderViewModel();
}
<!DOCTYPE html>
<html lang="en" dir="ltr">
<head prefix="og: http://ogp.me/ns#">
    <title>DispatcherWeb</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <meta content="" name="description" />
    <meta content="" name="author" />
    <meta property="og:title" content="DispatcherWeb" />
    <meta property="og:image" content="@headerViewModel.GetLogoUrl(ApplicationPath, "light")" />
    <meta property="og:description" content="Base solution for your next web application" />
    <meta property="og:url" content="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">
    <link rel="shortcut icon" href="~/favicon.ico" />
    <partial name="_CommonInlineStyles" />
    <partial name="_ApplicationInsights" />
    <partial name="_Favicons" />
    <link rel="stylesheet" abp-href="/view-resources/Areas/App/Views/_Bundles/vendors.bundle.css" asp-append-version="true" />
    <link rel="stylesheet" abp-href="/view-resources/Areas/App/Views/_Bundles/app-layout-libs.css" asp-append-version="true" />
    @RenderSection("ThemeStyles", false)
    <link rel="stylesheet" abp-href="/view-resources/Areas/App/Views/_Bundles/common-styles.css" asp-append-version="true" />
    <link rel="stylesheet" abp-href="/Common/Scripts/Datatables/datatables.css" asp-append-version="true" />
    <link rel="stylesheet" abp-href="/Common/Styles/metronic-customize.css" asp-append-version="true" />

    @if (isChatEnabled)
    {
        <link rel="stylesheet" abp-href="/view-resources/Areas/App/Views/Layout/_ChatBar.css" asp-append-version="true" />
    }
    <link rel="stylesheet" abp-href="/view-resources/Areas/App/Views/Layout/_Layout.css" asp-append-version="true" />
    @RenderSection("Styles", false)
    @{ var loginInfo = await SessionCache.GetCurrentLoginInformationsAsync(); }
    @if (loginInfo.Tenant?.CustomCssId != null)
    {
        <!-- id parameter is used to prevent caching -->
        <link id="TenantCustomCss" rel="stylesheet" href="@Url.Action("GetCustomCss", "TenantCustomization", new { area = string.Empty, id = loginInfo.Tenant.CustomCssId.Value })" asp-append-version="true" />
    }
    <script type="text/javascript">
        @* This is used to get the application's root path from javascript.
        It's useful if you're running application in a virtual directory under IIS. *@
        var abp = abp || {}; abp.appPath = '@ApplicationPath';
        abp.reportCenterPath = '@ScriptPaths.ReportCenter';
    </script>

</head>
<!-- END HEAD -->
<!-- begin::Body -->
<body class="m-page--fluid m--skin-light2
      m-content--skin-light2
      m-header--fixed
      m-header--fixed-mobile
      m-aside-left--fixed
      @(Context.Request.Cookies.ContainsKey("sidebar_toggle_state") && Context.Request.Cookies["sidebar_toggle_state"] == "on" ? "m-aside-left--minimize m-brand--minimize":"")
      m-aside-left--enabled
      m-aside-left--skin-light
      m-aside-left--offcanvas">
    <!-- begin:: Page -->
    <div class="m-grid m-grid--hor m-grid--root m-page">
        @RenderBody()
    </div>
    <!-- end:: Page -->
    <!-- begin::Chat Bar -->
    @if (isChatEnabled)
    {
        @await Html.PartialAsync("~/Areas/App/Views/Layout/_ChatBar.cshtml")
    }
    <!-- end::Chat Bar -->
    <!-- begin::Scroll Top -->
    <div class="m-scroll-top m-scroll-top--skin-top d-print-none" data-toggle="m-scroll-top" data-scroll-offset="500" data-scroll-speed="300">
        <i class="la la-arrow-up" aria-label="@L("Collapse")"></i>
    </div>
    <!-- end::Scroll Top -->
    <!--begin::Base Scripts -->
    <script abp-src="/view-resources/Areas/App/Views/_Bundles/app-layout-libs.js" asp-append-version="true"></script>
    <script abp-src="/view-resources/Areas/App/Views/_Bundles/scripts.bundle.js" asp-append-version="true"></script>
    <!-- Dynamic scripts of ABP system (They are created on runtime and can not be bundled) -->
    <script src="@(ApplicationPath)AbpServiceProxies/GetAll?v=@(AppTimes.StartupTime.Ticks)" type="text/javascript"></script>
    <script src="@(ApplicationPath)AbpScripts/GetScripts?v=@(AppTimes.StartupTime.Ticks)" type="text/javascript"></script>
    <script type="text/javascript">
        abp.localization.currentCulture = $.extend({}, abp.localization.currentCulture, { displayNameEnglish: '@CultureInfo.CurrentUICulture.EnglishName' });
        moment.locale('@(CultureHelper.UsingLunarCalendar ? "en": CultureInfo.CurrentUICulture.Name )'); //Localizing moment.js
    </script>
    <script src="@(ApplicationPath)lib/@@aspnet/signalr/dist/browser/signalr.min.js/signalr.min.js" asp-append-version="true"></script>
    <script src="@(ApplicationPath)lib/abp-web-resources/Abp/Framework/scripts/libs/abp.signalr-client.js" asp-append-version="true"></script>
    <script abp-src="/view-resources/Areas/App/Views/_Bundles/common-scripts.js" asp-append-version="true"></script>
    <script abp-src="/view-resources/Areas/App/Views/_Bundles/app-common-scripts.js" asp-append-version="true"></script>
    <script abp-src="/view-resources/Areas/App/Views/Layout/_Header.js" asp-append-version="true"></script>

    @if (isChatEnabled)
    {
        <script src="@(ApplicationPath)view-resources/Areas/App/Views/Layout/_ChatBar.js" asp-append-version="true"></script>
        <script src="@(ApplicationPath)Common/Scripts/Chat/chat.signalr.js" asp-append-version="true"></script>
    }
    @if (await SettingManager.GetSettingValueAsync<bool>(AppSettings.UserManagement.SessionTimeOut.IsEnabled) && AbpSession.UserId.HasValue)
    {
        <script src="@(ApplicationPath)view-resources/Areas/App/Views/_Bundles/InactivityController.min.js" asp-append-version="true"></script>
    }
    <script src="~@ScriptPaths.JQuery_Validation_Localization" asp-append-version="true"></script>
    <script src="~@ScriptPaths.JQuery_Timeago_Localization" asp-append-version="true"></script>
    <script src="~@ScriptPaths.Select2_Localization" asp-append-version="true"></script>

    <partial name="_GoogleMapsScript" />

    <!--end::Base Scripts -->
    <!--begin::Page Snippets -->
    @await RenderSectionAsync("Scripts", false)
    <script>
        app.supportsTenancyNameInUrl = @(WebUrlService.SupportsTenancyNameInUrl.ToString().ToLower());
    </script>
    <!--end::Page Snippets -->

    <partial name="_UserGuidingScript" />
</body>
<!-- end::Body -->
</html>

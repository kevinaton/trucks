@using Abp.Application.Services.Dto
@using Abp.Timing;
@using DispatcherWeb.Web.Areas.App.Models.Settings
@using DispatcherWeb.Web.Areas.App.Startup
@using Abp.Extensions
@using DispatcherWeb.Features
@using DispatcherWeb.Web.Utils
@using Abp.Application.Features
@using DispatcherWeb.Web.Controllers
@using DispatcherWeb.Authorization
@using DispatcherWeb.Infrastructure.Extensions

@model SettingsViewModel
@{
    ViewBag.CurrentPageName = AppPageNames.Tenant.Settings;
}

@section Styles
{
    <link href="~/view-resources/Areas/App/Views/Settings/settings.css" rel="stylesheet" />
}

@section Scripts
{
    @*<partial name="_GoogleMapsScript" />*@
    <script src="~/view-resources/Areas/App/Views/Settings/Index.js" asp-append-version="true"></script>
}
<div class="m-subheader">
    <div class="d-flex align-items-center row">
        <div class="mr-auto col-sm-12 col-md-6">
            <h3 class="m-subheader__title m-subheader__title--separator">
                <span>@L("Settings")</span>
            </h3>
            <span class="m-section__sub">
                @L("SettingsHeaderInfo")
            </span>
        </div>
        <div class="col-sm-12 col-md-6 text-right">
            <button id="SaveAllSettingsButton" class="btn btn-primary"><i class="fa fa-save"></i> @L("SaveAll")</button>
        </div>
    </div>
</div>
<div class="m-content">
    <div class="m-portlet m-portlet--mobile">
        <div class="m-portlet__body">
            <div id="SettingsTabPanel" class="tabbable-line row vertical-tab">
                <ul class="nav nav-tabs m-tabs-line flex-column col-3 col-md-3 col-xl-2" role="tablist">
                    <li class="nav-item m-tabs__item ">
                        <a href="#SettingsGeneralTab" aria-expanded="true" class="nav-link m-tabs__link active" data-toggle="tab" role="tab">
                            @L("General")
                        </a>
                    </li>
                    <li class="nav-item m-tabs__item">
                        @*<a href="#SettingsAppearanceTab" aria-expanded="false" class="nav-link m-tabs__link @((!Clock.SupportsMultipleTimezone) ? "active" : "")" data-toggle="tab" role="tab">*@
                        <a href="#SettingsAppearanceTab" aria-expanded="false" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("Appearance")
                        </a>
                    </li>
                    <li class="nav-item m-tabs__item">
                        <a href="#SettingsUserManagementTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("UserManagement")
                        </a>
                    </li>
                    <li class="nav-item m-tabs__item">
                        <a href="#SecurityManagementTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("Security")
                        </a>
                    </li>
                    <li class="nav-item m-tabs__item">
                        <a href="#QuoteSettingsTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("Quote")
                        </a>
                    </li>
                    @if (await FeatureChecker.IsEnabledAsync(false, AppFeatures.GpsIntegrationFeature, AppFeatures.SmsIntegrationFeature, AppFeatures.DispatchingFeature))
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#DispatchingAndMessagingTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("Settings_DispatchingAndMessaging")
                            </a>
                        </li>
                    }
                    @if (!ViewBag.IsMultiTenancyEnabled)
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsEmailSmtpTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("EmailSmtp")
                            </a>
                        </li>
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsSmsTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("SMS")
                            </a>
                        </li>
                    }
                    <li class="nav-item m-tabs__item">
                        <a href="#BillingTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("Invoice")
                        </a>
                    </li>

                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.GpsIntegrationFeature))
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsGpsIntegrationTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("GpsIntegration")
                            </a>
                        </li>
                    }
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowPaymentProcessingFeature))
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsPaymentTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("PaymentSettings")
                            </a>
                        </li>
                    }
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowLeaseHaulersFeature))
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsLeaseHaulerTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("Settings_LeaseHaulers")
                            </a>
                        </li>
                    }
                    <li class="nav-item m-tabs__item">
                        <a href="#SettingsTimeAndPayTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("TimeAndPay")
                        </a>
                    </li>
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowImportingTruxEarnings))
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsTruxTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("Trux")
                            </a>
                        </li>
                    }
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowImportingLuckStoneEarnings))
                    {
                        <li class="nav-item m-tabs__item">
                            <a href="#SettingsLuckStoneTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                                @L("LuckStone")
                            </a>
                        </li>
                    }
                    <li class="nav-item m-tabs__item">
                        <a href="#SettingsFuelTab" aria-expanded="true" class="nav-link m-tabs__link" data-toggle="tab" role="tab">
                            @L("Fuel")
                        </a>
                    </li>
                </ul>
                <div class="tab-content col-9 col-md-9 col-xl-10">
                    @*@if (Clock.SupportsMultipleTimezone)
                        {*@
                    <div class="tab-pane active" id="SettingsGeneralTab">
                        <form id="GeneralSettingsForm" class="m-form">
                            @if (!ViewBag.IsMultiTenancyEnabled)
                            {
                                <div class="form-group form-md-line-input form-md-floating-label">
                                    <label for="WebSiteRootAddress">@L("WebSiteRootAddress")</label>
                                    <input id="WebSiteRootAddress" type="text" name="WebSiteRootAddress" class="form-control" value="@Model.Settings.General.WebSiteRootAddress" maxlength="128">
                                    <span class="help-block">@L("HelpWebsiteBlock")</span>
                                </div>
                            }

                            <div class="form-group">
                                <label for="Timezone">@L("Timezone")</label>
                                @Html.DropDownList("Timezone", Model.TimezoneItems.Select(i => i.ToSelectListItem()), new { @class = "form-control", id = "Timezone" })
                            </div>
                            <div>
                                @Html.Hidden("TimezoneForComparison", Model.Settings.General.TimezoneForComparison)
                            </div>
                            <div class="form-group">
                                <label for="CompanyName" class="required-label">@L("CompanyName")</label>
                                <input id="CompanyName" required type="text" name="CompanyName" class="form-control" value="@Model.Settings.General.CompanyName">
                            </div>
                            <div class="form-group">
                                <label for="DefaultMapLocationAddress">@L("DefaultMapLocation")</label>
                                <input type="hidden" id="DefaultMapLocation" name="DefaultMapLocation" value="@Model.Settings.General.DefaultMapLocation" />
                                <input id="DefaultMapLocationAddress" type="text" name="DefaultMapLocationAddress" class="form-control" value="@Model.Settings.General.DefaultMapLocationAddress">
                            </div>
                            <div class="form-group">
                                <label for="CurrencySymbol" class="required-label">@L("CurrencySymbolSettingLabel")</label>
                                <input id="CurrencySymbol" required type="text" name="CurrencySymbol" class="form-control" value="@Model.Settings.General.CurrencySymbol">
                            </div>
                            <div class="form-group">
                                <label for="Setting_UserDefinedField1Checkbox" class="m-checkbox col-lg-12">
                                    <input id="Setting_UserDefinedField1Checkbox" type="checkbox" name="UserDefinedField1" value="true" checked=@(!String.IsNullOrEmpty(Model.Settings.General.UserDefinedField1) ? "checked" : null)>
                                    @L("Setting_UserDefinedField1Checkbox")
                                    <span></span>
                                </label>
                                <input class="form-control" style="display: none;" id="Setting_UserDefinedField1" type="text" value="@Model.Settings.General.UserDefinedField1" name="UserDefinedField1" />
                            </div>
                            <div class="form-group">
                                <label for="Setting_AllowAddingTickets" class="m-checkbox col-lg-12">
                                    <input id="Setting_AllowAddingTickets" type="checkbox" name="AllowAddingTickets" value="true" checked=@(Model.Settings.General.AllowAddingTickets ? "checked" : null)>
                                    @L("Setting_AllowAddingTickets")
                                    <span></span>
                                </label>
                            </div>
                            <div class="form-group">
                                <label for="DontValidateDriverAndTruckOnTickets" class="m-checkbox col-lg-12">
                                    <input id="DontValidateDriverAndTruckOnTickets" type="checkbox" name="DontValidateDriverAndTruckOnTickets" value="true" checked=@(Model.Settings.General.DontValidateDriverAndTruckOnTickets ? "checked" : null)>
                                    @L("DontValidateDriverAndTruckOnTickets") <i class="fa fa-info-circle text-primary" id="DontValidateDriverAndTruckOnTicketsInfo" title="@L("DontValidateDriverAndTruckOnTicketsInfo")"></i>
                                    <span></span>
                                </label>
                            </div>
                            <div class="form-group">
                                <label for="Setting_ShowDriverNamesOnPrintedOrder" class="m-checkbox col-lg-12">
                                    <input id="Setting_ShowDriverNamesOnPrintedOrder" type="checkbox" name="ShowDriverNamesOnPrintedOrder" value="true" checked="@(Model.Settings.General.ShowDriverNamesOnPrintedOrder ? "checked" : null)">
                                    @L("Setting_ShowDriverNamesOnPrintedOrder")
                                    <span></span>
                                </label>
                            </div>
                            <div class="form-group" @Html.StyleDisplayNone(!await FeatureChecker.IsEnabledAsync(AppFeatures.AllowMultiOfficeFeature))>
                                <label for="SplitBillingByOffices" class="m-checkbox col-lg-12">
                                    <input id="SplitBillingByOffices" type="checkbox" name="SplitBillingByOffices" value="true" checked="@(Model.Settings.General.SplitBillingByOffices ? "checked" : null)">
                                    @L("SplitBillingByOffices")
                                    <span></span>
                                </label>
                            </div>
                            <div class="form-group">
                                <label for="OrderEmailSubjectTemplate">@L("OrderEmailSubjectTemplate")</label>
                                <input type="text" class="form-control" name="OrderEmailSubjectTemplate" value="@Model.Settings.General.OrderEmailSubjectTemplate">
                            </div>
                            <div class="form-group">
                                <label for="OrderEmailBodyTemplate">@L("OrderEmailBodyTemplate")</label>
                                <textarea class="form-control" name="OrderEmailBodyTemplate" rows="7">@Model.Settings.General.OrderEmailBodyTemplate</textarea>
                            </div>
                            <div class="form-group">
                                <label for="ReceiptEmailSubjectTemplate">@L("ReceiptEmailSubjectTemplate")</label>
                                <input type="text" class="form-control" name="ReceiptEmailSubjectTemplate" value="@Model.Settings.General.ReceiptEmailSubjectTemplate">
                            </div>
                            <div class="form-group">
                                <label for="ReceiptEmailBodyTemplate">@L("ReceiptEmailBodyTemplate")</label>
                                <textarea class="form-control" name="ReceiptEmailBodyTemplate" rows="7">@Model.Settings.General.ReceiptEmailBodyTemplate</textarea>
                            </div>
                            <div class="form-group" style="display: none">
                                <label for="DriverOrderEmailTitle">@L("DriverOrderEmailTitle")</label>
                                <input type="text" class="form-control" name="DriverOrderEmailTitle" value="@Model.Settings.General.DriverOrderEmailTitle">
                            </div>
                            <div class="form-group" style="display: none">
                                <label for="DriverOrderEmailBody">@L("DriverOrderEmailBody")</label>
                                <textarea class="form-control" name="DriverOrderEmailBody" rows="3">@Model.Settings.General.DriverOrderEmailBody</textarea>
                            </div>

                            @* Removed by #7741 *@
                            @*<div class="form-group">
            <label for="DriverOrderSms">@L("DriverOrderSms")</label>
            <textarea class="form-control" name="DriverOrderSms" rows="3">@Model.Settings.General.DriverOrderSms</textarea>
        </div>*@

                            <div class="form-group">
                                <label for="Setting_UseShifts" class="m-checkbox col-lg-12">
                                    <input id="Setting_UseShifts" type="checkbox" name="UseShifts" value="true"
                                           @(Model.Settings.General.UseShifts ? "checked disabled" : null)>
                                    @L("Setting_UseShifts")
                                    <span></span>
                                </label>
                                <div class="form-group">
                                    <label class="@(Model.Settings.General.ShiftName1.IsNullOrEmpty() ? null : " required-label")"
                                           style="display: none;" for="Setting_ShiftName1">@L("Setting_ShiftName") 1</label>
                                    <input class="form-control" style="display: none;" id="Setting_ShiftName1" type="text"
                                           value="@Model.Settings.General.ShiftName1" name="ShiftName1" maxlength="10"
                                           required="@(Model.Settings.General.ShiftName1.IsNullOrEmpty() ? null : "required")" />
                                </div>
                                <div class="form-group">
                                    <label class="@(Model.Settings.General.ShiftName2.IsNullOrEmpty() ? null : " required-label")"
                                           style="display: none;" for="Setting_ShiftName2">@L("Setting_ShiftName") 2</label>
                                    <input class="form-control" style="display: none;" id="Setting_ShiftName2" type="text"
                                           value="@Model.Settings.General.ShiftName2" name="ShiftName2" maxlength="10"
                                           required="@(Model.Settings.General.ShiftName2.IsNullOrEmpty() ? null : "required")" />
                                </div>
                                <div class="form-group">
                                    <label class="@(Model.Settings.General.ShiftName3.IsNullOrEmpty() ? null : " required-label")"
                                           style="display: none;" for="Setting_ShiftName3">@L("Setting_ShiftName") 3</label>
                                    <input class="form-control" style="display: none;" id="Setting_ShiftName3" type="text"
                                           value="@Model.Settings.General.ShiftName3" name="ShiftName3" maxlength="10"
                                           required="@(Model.Settings.General.ShiftName3.IsNullOrEmpty() ? null : "required")" />
                                </div>
                            </div>

                            @*@if (await PermissionChecker.IsGrantedAsync(AppPermissions.Pages_Administration_RecalculateHasAllActualAmountsValues))
        {
            <div class="form-group">
                <button type="button" class="btn btn-default" id="RecalculateHasAllActualAmountsValuesButton">@L("RecalculateHasAllActualAmountsValues")</button>
            </div>
        }*@
                        </form>
                    </div>
                    @*}
                        <div class="tab-pane @((!Clock.SupportsMultipleTimezone) ? "active" : "")" id="SettingsAppearanceTab">*@
                    <div class="tab-pane" id="SettingsAppearanceTab">
                        <form id="SettingsLogoUploadForm" method="POST" class="m-form mb-5" action="@Url.Action("UploadLogo", "TenantCustomization", new {area = string.Empty, TenantCustomizationController.LogoType.ApplicationLogo})">
                            <h5>@L("ApplicationLogo")</h5>
                            <div class="form-group fileUpload margin-top-20">
                                <div class="btn btn-primary browse_btn">
                                    <span>@L("Browse")</span>
                                    <input id="ApplicationLogoImage" name="ApplicationLogoImage" type="file" class="upload">
                                </div>
                                <input id="uploadApplicationLogoFile" class="form-control file-upload" placeholder="No File Selected." disabled="disabled">
                            </div>
                            <div class="col-xs-12 margin-bottom-10">
                                <span class="m-form__help">@L("UploadLogo_Info")</span>
                            </div>
                            <button class="btn btn-primary" type="submit"><i class="fa fa-upload"></i>@L("Upload")</button>
                            <button class="btn btn-default" type="reset"><i class="fa fa-times"></i>@L("Clear")</button>
                        </form>
                        <form id="SettingsReportsLogoUploadForm" method="POST" class="m-form mb-5" action="@Url.Action("UploadLogo", "TenantCustomization", new {area = string.Empty, LogoType = TenantCustomizationController.LogoType.ReportsLogo})">
                            <h5>@L("ReportsLogo")</h5>
                            <div class="form-group fileUpload margin-top-20">
                                <div class="btn btn-primary browse_btn">
                                    <span>@L("Browse")</span>
                                    <input id="ReportsLogoImage" name="ReportsLogoImage" type="file" class="upload">
                                </div>
                                <input id="uploadReportsLogoFile" class="form-control file-upload" placeholder="No File Selected." disabled="disabled">
                            </div>
                            <div class="col-xs-12 margin-bottom-10">
                                <span class="m-form__help">@L("UploadReportsLogo_Info")</span>
                            </div>
                            <button class="btn btn-primary" type="submit"><i class="fa fa-upload"></i>@L("Upload")</button>
                            <button class="btn btn-default" type="reset"><i class="fa fa-times"></i>@L("Clear")</button>
                        </form>
                        <form id="SettingsCustomCssUploadForm" method="POST" class="m-form mb-5" action="@Url.Action("UploadCustomCss", "TenantCustomization", new {area = string.Empty})">
                            <h5>@L("CustomCSS")</h5>
                            <div class="form-group fileUpload margin-top-20">
                                <div class="btn btn-primary browse_btn">
                                    <span>@L("Browse")</span>
                                    <input id="CustomCssFile" name="CustomCssFile" type="file" class="upload">
                                </div>
                                <input id="uploadCustomCssFile" class="form-control file-upload" placeholder="No File Selected." disabled="disabled">
                            </div>
                            <div class="col-xs-12 margin-bottom-10">
                                <span class="m-form__help">@L("UploadCSS_Info")</span>
                            </div>
                            <button class="btn btn-primary" type="submit"><i class="fa fa-upload"></i>@L("Upload")</button>
                            <button class="btn btn-default" type="reset"><i class="fa fa-times"></i>@L("Clear")</button>
                        </form>
                    </div>
                    <div class="tab-pane" id="SettingsUserManagementTab">
                        <form id="FormBasedRegistrationSettingsForm" class="m-form">
                            <h5>@L("FormBasedRegistration")</h5>
                            <div class="m-checkbox-list margin-top-20">
                                <div class="form-group m-form__group">
                                    <label for="Setting_AllowSelfRegistration" class="m-checkbox col-lg-12">
                                        <input id="Setting_AllowSelfRegistration" type="checkbox" name="AllowSelfRegistration" value="true" checked=@(Model.Settings.UserManagement.AllowSelfRegistration ? "checked" : null)>
                                        @L("AllowUsersToRegisterThemselves")
                                        <span></span>
                                    </label>
                                    <span class="m-form__help">@L("AllowUsersToRegisterThemselves_Hint")</span>
                                </div>
                                <div class="form-group m-form__group">
                                    <label for="Setting_IsNewRegisteredUserActiveByDefault" class="m-checkbox col-lg-12">
                                        <input id="Setting_IsNewRegisteredUserActiveByDefault" type="checkbox" name="IsNewRegisteredUserActiveByDefault" value="true" checked=@(Model.Settings.UserManagement.IsNewRegisteredUserActiveByDefault ? "checked" : null)>
                                        @L("NewRegisteredUsersIsActiveByDefault")
                                        <span></span>
                                    </label>
                                    <span class="m-form__help">@L("NewRegisteredUsersIsActiveByDefault_Hint")</span>
                                </div>
                                <label for="Setting_UseCaptchaOnRegistration" class="m-checkbox">
                                    <input id="Setting_UseCaptchaOnRegistration" type="checkbox" name="UseCaptchaOnRegistration" value="true" checked=@(Model.Settings.UserManagement.UseCaptchaOnRegistration ? "checked" : null)>
                                    @L("UseCaptchaOnRegistration")
                                    <span></span>
                                </label>
                            </div>
                        </form>
                        @if (!ViewBag.IsMultiTenancyEnabled && Model.Settings.Ldap.IsModuleEnabled)
                        {
                            <form id="LdapSettingsForm" class="m-form">
                                <h5 class="margin-top-10">@L("LdapSettings")</h5>
                                <label for="Setting_LdapIsEnabled" class="m-checkbox">
                                    <input id="Setting_LdapIsEnabled" type="checkbox" name="IsEnabled" value="true" checked=@(Model.Settings.Ldap.IsEnabled ? "checked" : null)>
                                    @L("EnableLdapAuthentication")
                                    <span></span>
                                </label>
                                <div class="form-group">
                                    <label for="Domain">@L("DomainName")</label>
                                    <input id="Domain" type="text" name="Domain" class="form-control" value="@Model.Settings.Ldap.Domain" maxlength="128">
                                </div>
                                <div class="form-group">
                                    <label for="UserName">@L("UserName")</label>
                                    <input id="UserName" type="text" name="UserName" class="form-control" value="@Model.Settings.Ldap.UserName" maxlength="128">
                                </div>
                                <div class="form-group">
                                    <label for="Password">@L("Password")</label>
                                    <input id="Password" type="password" name="Password" class="form-control" value="@Model.Settings.Ldap.Password" maxlength="128" autocomplete="off">
                                </div>
                            </form>
                        }
                        <form id="OtherSettingsForm" class="m-form">
                            <h5 class="margin-top-10">@L("OtherSettings")</h5>
                            <label for="Settings_IsEmailConfirmationRequiredForLogin" class="m-checkbox">
                                <input id="Settings_IsEmailConfirmationRequiredForLogin" class="md-check" type="checkbox" name="IsEmailConfirmationRequiredForLogin" value="true" checked=@(Model.Settings.UserManagement.IsEmailConfirmationRequiredForLogin ? "checked" : null)>
                                @L("EmailConfirmationRequiredForLogin")
                                <span></span>
                            </label>
                            <h5>@L("CookieConsent")</h5>
                            <label for="Setting_IsCookieConsentEnabled" class="m-checkbox">
                                <input id="Setting_IsCookieConsentEnabled" type="checkbox" name="IsCookieConsentEnabled" value="true" checked=@(Model.Settings.UserManagement.IsCookieConsentEnabled ? "checked" : null)>
                                @L("IsCookieConsentEnabled")
                                <span></span>
                            </label>
                        </form>
                    </div>
                    <div id="SecurityManagementTab" class="tab-pane">
                        <div>
                            <h5>@L("PasswordComplexity")</h5>
                            <label for="Setting_PasswordComplexity_UseDefaultSettings" class="m-checkbox margin-top-10">
                                <input id="Setting_PasswordComplexity_UseDefaultSettings" type="checkbox" name="UseDefaultSettings" value="true" @(Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "checked=\"checked\"" : "")>
                                @L("UseDefaultSettings")
                                <span></span>
                            </label>
                            <hr />
                            <form id="PasswordComplexitySettingsForm" class="m-form" style="@(Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "display:none;" : "")">
                                <div class="m-checkbox-list">
                                    <label for="Setting_PasswordComplexity_RequireDigit" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireDigit" type="checkbox" name="RequireDigit" value="true" @(Model.Settings.Security.PasswordComplexity.RequireDigit ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireDigit")
                                        <span></span>
                                    </label>
                                    <label for="Setting_PasswordComplexity_RequireLowercase" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireLowercase" type="checkbox" name="RequireLowercase" value="true" @(Model.Settings.Security.PasswordComplexity.RequireLowercase ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireLowercase")
                                        <span></span>
                                    </label>
                                    <label for="Setting_PasswordComplexity_RequireNonAlphanumeric" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireNonAlphanumeric" type="checkbox" name="RequireNonAlphanumeric" value="true" @(Model.Settings.Security.PasswordComplexity.RequireNonAlphanumeric ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireNonAlphanumeric")
                                        <span></span>
                                    </label>
                                    <label for="Setting_PasswordComplexity_RequireUppercase" class="m-checkbox">
                                        <input id="Setting_PasswordComplexity_RequireUppercase" type="checkbox" name="RequireUppercase" value="true" @(Model.Settings.Security.PasswordComplexity.RequireUppercase ? "checked=\"checked\"" : "")>
                                        @L("PasswordComplexity_RequireUppercase")
                                        <span></span>
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="RequiredLength">@L("PasswordComplexity_RequiredLength")</label>
                                    <input id="RequiredLength" type="number" data-rule-number="true" data-rule-min="6" data-rule-max="30" data-rule-digits="true" name="RequiredLength" class="form-control" value="@Model.Settings.Security.PasswordComplexity.RequiredLength">
                                </div>
                            </form>
                            <form id="DefaultPasswordComplexitySettingsForm" class="m-form" style="@(!Model.Settings.Security.UseDefaultPasswordComplexitySettings ? "display:none;" : "")">
                                <div class="m-checkbox-list">
                                    <label for="Setting_DefaultPasswordComplexity_RequireDigit" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireDigit" type="checkbox" name="RequireDigit" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireDigit ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireDigit")
                                        <span></span>
                                    </label>
                                    <label for="Setting_DefaultPasswordComplexity_RequireLowercase" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireLowercase" type="checkbox" name="RequireLowercase" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireLowercase ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireLowercase")
                                        <span></span>
                                    </label>
                                    <label for="Setting_DefaultPasswordComplexity_RequireNonAlphanumeric" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireNonAlphanumeric" type="checkbox" name="RequireNonAlphanumeric" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireNonAlphanumeric ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireNonAlphanumeric")
                                        <span></span>
                                    </label>
                                    <label for="Setting_DefaultPasswordComplexity_RequireUppercase" class="m-checkbox">
                                        <input id="Setting_DefaultPasswordComplexity_RequireUppercase" type="checkbox" name="RequireUppercase" value="true" @(Model.Settings.Security.DefaultPasswordComplexity.RequireUppercase ? "checked=\"checked\"" : "") disabled>
                                        @L("PasswordComplexity_RequireUppercase")
                                        <span></span>
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="RequiredLength">@L("PasswordComplexity_RequiredLength")</label>
                                    <input id="RequiredLength2" type="number" name="RequiredLength" class="form-control" value="@Model.Settings.Security.DefaultPasswordComplexity.RequiredLength" disabled>
                                </div>
                            </form>
                        </div>
                        <div>
                            <h5>@L("UserLockOut")</h5>
                            <form id="UserLockOutSettingsForm" class="m-form">
                                <label for="Setting_UserLockOut_IsEnabled" class="m-checkbox">
                                    <input id="Setting_UserLockOut_IsEnabled" type="checkbox" name="IsEnabled" value="true" @(Model.Settings.Security.UserLockOut.IsEnabled ? "checked=\"checked\"" : "")>
                                    @L("EnableUserAccountLockingOnFailedLoginAttemts")
                                    <span></span>
                                </label>
                                <div class="form-group">
                                    <label for="MaxFailedAccessAttemptsBeforeLockout">@L("MaxFailedAccessAttemptsBeforeLockout")</label>
                                    <input id="MaxFailedAccessAttemptsBeforeLockout" type="number" name="MaxFailedAccessAttemptsBeforeLockout" class="form-control" value="@Model.Settings.Security.UserLockOut.MaxFailedAccessAttemptsBeforeLockout" data-rule-digits="true" data-rule-number="true" maxlength="5">
                                </div>
                                <div class="form-group">
                                    <label for="DefaultAccountLockoutSeconds">@L("DefaultAccountLockoutDurationAsSeconds")</label>
                                    <input id="DefaultAccountLockoutSeconds" type="number" name="DefaultAccountLockoutSeconds" class="form-control" value="@Model.Settings.Security.UserLockOut.DefaultAccountLockoutSeconds" data-rule-digits="true" data-rule-number="true" maxlength="5">
                                </div>
                            </form>
                        </div>
                        @if (!ViewBag.IsMultiTenancyEnabled || Model.Settings.Security.TwoFactorLogin.IsEnabledForApplication)
                        {
                            <div>
                                <h5>@L("TwoFactorLogin")</h5>
                                <form id="TwoFactorLoginSettingsForm" class="m-form">
                                    <div class="m-checkbox-list">
                                        <label for="Setting_TwoFactorLogin_IsEnabled" class="m-checkbox">
                                            <input id="Setting_TwoFactorLogin_IsEnabled" type="checkbox" name="IsEnabled" value="true" @(Model.Settings.Security.TwoFactorLogin.IsEnabled ? "checked=\"checked\"" : "")>
                                            @L("EnableTwoFactorLogin")
                                            <span></span>
                                        </label>
                                        @if (!ViewBag.IsMultiTenancyEnabled)
                                        {
                                            <label for="Setting_TwoFactorLogin_IsEmailProviderEnabled" class="m-checkbox">
                                                <input id="Setting_TwoFactorLogin_IsEmailProviderEnabled" type="checkbox" value="true" name="IsEmailProviderEnabled" @(Model.Settings.Security.TwoFactorLogin.IsEmailProviderEnabled ? "checked=\"checked\"" : "")>
                                                @L("IsEmailVerificationEnabled")
                                                <span></span>
                                            </label>
                                            <label for="Setting_TwoFactorLogin_IsSmsProviderEnabled" class="m-checkbox">
                                                <input id="Setting_TwoFactorLogin_IsSmsProviderEnabled" type="checkbox" value="true" name="IsSmsProviderEnabled" @(Model.Settings.Security.TwoFactorLogin.IsSmsProviderEnabled ? "checked=\"checked\"" : "")>
                                                @L("IsSmsVerificationEnabled")
                                                <span></span>
                                            </label>
                                            <label for="Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled" class="m-checkbox">
                                                <input id="Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled" type="checkbox" name="IsGoogleAuthenticatorEnabled" value="true" @(Model.Settings.Security.TwoFactorLogin.IsGoogleAuthenticatorEnabled ? "checked=\"checked\"" : "")>
                                                @L("IsGoogleAuthenticatorEnabled")
                                                <span></span>
                                            </label>
                                        }
                                        <label for="Setting_TwoFactorLogin_IsRememberBrowserEnabled" class="m-checkbox">
                                            <input id="Setting_TwoFactorLogin_IsRememberBrowserEnabled" type="checkbox" value="true" name="IsRememberBrowserEnabled" @(Model.Settings.Security.TwoFactorLogin.IsRememberBrowserEnabled ? "checked=\"checked\"" : "")>
                                            @L("AllowToRememberBrowserForTwoFactorLogin")
                                            <span></span>
                                        </label>
                                    </div>
                                </form>
                            </div>
                        }
                    </div>
                    <div class="tab-pane" id="QuoteSettingsTab">
                        <h5>@L("Quote")</h5>
                        <form id="QuoteSettingsForm" class="m-form">
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group">
                                        <label for="PromptForDisplayingQuarryInfoOnQuotes" class="m-checkbox col-lg-12 mt-2">
                                            <input id="PromptForDisplayingQuarryInfoOnQuotes" type="checkbox" name="PromptForDisplayingQuarryInfoOnQuotes" value="true" checked="@(Model.Settings.Quote.PromptForDisplayingQuarryInfoOnQuotes ? "checked" : null)">
                                            @L("PromptForDisplayingQuarryInfoOnQuotes")
                                            <span></span>
                                        </label>
                                    </div>
                                    <div class="form-group">
                                        <label for="QuoteDefaultNote">@L("QuoteDefaultNote")</label>
                                        <textarea class="form-control" name="QuoteDefaultNote" rows="7">@Model.Settings.Quote.QuoteDefaultNote</textarea>
                                    </div>
                                    <div class="form-group">
                                        <label for="QuoteEmailSubjectTemplate">@L("QuoteEmailSubjectTemplate")</label>
                                        <input type="text" class="form-control" name="QuoteEmailSubjectTemplate" value="@Model.Settings.Quote.QuoteEmailSubjectTemplate">
                                    </div>
                                    <div class="form-group">
                                        <label for="QuoteEmailBodyTemplate">@L("QuoteEmailBodyTemplate")</label>
                                        <textarea class="form-control" name="QuoteEmailBodyTemplate" rows="7">@Model.Settings.Quote.QuoteEmailBodyTemplate</textarea>
                                    </div>
                                    <div class="form-group">
                                        <label for="QuoteChangedNotificationEmailSubjectTemplate">@L("QuoteChangedNotificationEmailSubjecTemplate")</label>
                                        <input type="text" class="form-control" name="QuoteChangedNotificationEmailSubjectTemplate" value="@Model.Settings.Quote.QuoteChangedNotificationEmailSubjectTemplate">
                                    </div>
                                    <div class="form-group">
                                        <label for="QuoteChangedNotificationEmailBodyTemplate">@L("QuoteChangedNotificationEmailBodyTemplate")</label>
                                        <textarea class="form-control" name="QuoteChangedNotificationEmailBodyTemplate" rows="7">@Model.Settings.Quote.QuoteChangedNotificationEmailBodyTemplate</textarea>
                                    </div>
                                    <div class="form-group">
                                        <label for="QuoteGeneralTermsAndConditions">@L("GeneralTermsAndConditions")</label>
                                        <textarea class="form-control" name="QuoteGeneralTermsAndConditions" rows="12">@Model.Settings.Quote.QuoteGeneralTermsAndConditions</textarea>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>

                    @if (!ViewBag.IsMultiTenancyEnabled)
                    {
                        <div class="tab-pane" id="SettingsEmailSmtpTab">
                            <form id="EmailSmtpSettingsForm" class="m-form">
                                <div class="form-group">
                                    <label for="DefaultFromAddress">@L("DefaultFromAddress")</label>
                                    <input id="DefaultFromAddress" type="email" name="DefaultFromAddress" class="form-control" value="@Model.Settings.Email.DefaultFromAddress" maxlength="@DispatcherWeb.Authorization.Users.User.MaxEmailAddressLength">
                                </div>
                                <div class="form-group">
                                    <label for="DefaultFromDisplayName">@L("DefaultFromDisplayName")</label>
                                    <input id="DefaultFromDisplayName" type="text" name="DefaultFromDisplayName" class="form-control" value="@Model.Settings.Email.DefaultFromDisplayName" maxlength="128">
                                </div>
                                <div class="form-group">
                                    <label for="SmtpHost">@L("SmtpHost")</label>
                                    <input id="SmtpHost" type="text" name="SmtpHost" class="form-control" value="@Model.Settings.Email.SmtpHost" maxlength="64">
                                </div>
                                <div class="form-group">
                                    <label for="SmtpPort">@L("SmtpPort")</label>
                                    <input id="SmtpPort" type="number" name="SmtpPort" class="form-control" value="@Model.Settings.Email.SmtpPort" maxlength="5">
                                </div>
                                <div class="m-checkbox-list">
                                    <label for="Settings_SmtpEnableSsl" class="m-checkbox">
                                        <input id="Settings_SmtpEnableSsl" type="checkbox" name="SmtpEnableSsl" value="true" checked="@(Model.Settings.Email.SmtpEnableSsl ? "checked" : null)">
                                        @L("UseSsl")
                                        <span></span>
                                    </label>
                                    <label for="Settings_SmtpUseDefaultCredentials" class="m-checkbox">
                                        <input id="Settings_SmtpUseDefaultCredentials" type="checkbox" name="SmtpUseDefaultCredentials" value="true" checked="@(Model.Settings.Email.SmtpUseDefaultCredentials ? "checked" : null)">
                                        @L("UseDefaultCredentials")
                                        <span></span>
                                    </label>
                                </div>
                                <div class="form-group">
                                    <label for="SmtpDomain">@L("DomainName")</label>
                                    <input id="SmtpDomain" type="text" name="SmtpDomain" class="form-control" value="@Model.Settings.Email.SmtpDomain" maxlength="128">
                                </div>
                                <div class="form-group">
                                    <label for="SmtpUserName">@L("UserName")</label>
                                    <input id="SmtpUserName" type="text" name="SmtpUserName" class="form-control" value="@Model.Settings.Email.SmtpUserName" maxlength="128">
                                </div>
                                <div class="form-group">
                                    <label for="SmtpPassword">@L("Password")</label>
                                    <input id="SmtpPassword" type="password" name="SmtpPassword" class="form-control" value="@Model.Settings.Email.SmtpPassword" maxlength="128" autocomplete="off">
                                </div>
                                <hr />
                                <div class="margin-top-20">
                                    <h5>@L("TestEmailSettingsHeader")</h5>
                                </div>
                                <div class="row">
                                    <div class="form-group col-md-4">
                                        <input id="TestEmailAddressInput" type="text" class="form-control input-sm" value="@ViewBag.CurrentUserEmail">
                                    </div>
                                    <div class="form-group col-md-2">
                                        <button id="SendTestEmailButton" class="btn green-haze" type="button">@L("SendTestEmail")</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="tab-pane" id="SettingsSmsTab">
                            <form id="SmsSettingsForm" class="m-form">
                                <div class="form-group">
                                    <label for="AccountSid">@L("AccountSID")</label>
                                    <input id="AccountSid" type="text" name="AccountSid" class="form-control" value="@Model.Settings.Sms.AccountSid" maxlength="64">
                                </div>
                                <div class="form-group">
                                    <label for="AuthToken">@L("AuthToken")</label>
                                    <input id="AuthToken" type="text" name="AuthToken" class="form-control" value="@Model.Settings.Sms.AuthToken" maxlength="64">
                                </div>
                                <div class="form-group">
                                    <label for="PhoneNumber">@L("PhoneNumber")</label>
                                    <input id="PhoneNumber" type="text" name="PhoneNumber" class="form-control" value="@Model.Settings.Sms.PhoneNumber" maxlength="64">
                                </div>
                            </form>
                        </div>
                    }
                    <div class="tab-pane" id="BillingTab">
                        <form id="BillingSettingsForm" class="m-form">
                            <h5>@L("InvoiceInformation")</h5>
                            <div class="form-group margin-top-10">
                                <label for="LegalName">@L("LegalName")</label>
                                <input id="LegalName" type="text" class="form-control" name="LegalName" value="@Model.Settings.Billing.LegalName" maxlength="64">
                            </div>
                            <div class="form-group">
                                <label for="Address">@L("Address")</label>
                                <textarea id="Address" rows="5" class="form-control" name="Address" maxlength="256">@Model.Settings.Billing.Address</textarea>
                            </div>
                            <div class="form-group">
                                <label for="RemitToInformation">@L("RemitToInformation")</label>
                                <textarea id="RemitToInformation" rows="5" class="form-control" name="RemitToInformation" maxlength="256">@Model.Settings.Billing.RemitToInformation</textarea>
                            </div>
                            <div class="form-group">
                                <label for="DefaultMessageOnInvoice">@L("DefaultMessageOnInvoice")</label>
                                <textarea class="form-control" name="DefaultMessageOnInvoice" maxlength="@DispatcherWeb.Invoices.Invoice.MaxMessageLength" rows="5">@Model.Settings.Billing.DefaultMessageOnInvoice</textarea>
                            </div>
                            <div class="form-group">
                                <label for="InvoiceEmailSubjectTemplate">@L("InvoiceEmailSubjectTemplate")</label>
                                <input type="text" class="form-control" name="InvoiceEmailSubjectTemplate" value="@Model.Settings.Billing.InvoiceEmailSubjectTemplate">
                            </div>
                            <div class="form-group">
                                <label for="InvoiceEmailBodyTemplate">@L("InvoiceEmailBodyTemplate")</label>
                                <textarea class="form-control" name="InvoiceEmailBodyTemplate" rows="7">@Model.Settings.Billing.InvoiceEmailBodyTemplate</textarea>
                            </div>
                            <div class="form-group">
                                <label for="TaxVatNo">@L("Tax/VatNo")</label>
                                <input id="TaxVatNo" type="text" class="form-control" name="TaxVatNo" value="@Model.Settings.Billing.TaxVatNo" maxlength="32">
                            </div>
                            <div class="form-group">
                                <label for="TaxCalculationType" class="required-label">@L("TaxCalculationType")</label>
                                <select class="form-control" name="TaxCalculationType" id="TaxCalculationType" asp-items="@Html.GetEnumSelectList(Model.Settings.Billing.TaxCalculationType)"></select>
                            </div>
                            <div id="AutopopulateCheckboxBlock">
                                <div class="form-group">
                                    <label for="Setting_AutopopulateDefaultTaxRateCheckbox" class="m-checkbox col-lg-12">
                                        <input id="Setting_AutopopulateDefaultTaxRateCheckbox" type="checkbox" name="AutopopulateDefaultTaxRate" value="true" checked=@(Model.Settings.Billing.AutopopulateDefaultTaxRate ? "checked" : null)>
                                        @L("AutopopulateDefaultTaxRate")
                                        <span></span>
                                    </label>
                                </div>
                                <div class="form-group" id="DefaultTaxRateBlock">
                                    <label for="Setting_DefaultTaxRate" class="required-label">@L("DefaultTaxRate")</label>
                                    <input class="form-control" id="Setting_DefaultTaxRate" type="number" required data-rule-number="true" data-rule-min="0.01" data-rule-max="99.99" value="@Model.Settings.Billing.DefaultTaxRate" name="DefaultTaxRate" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="InvoiceTemplate" class="required-label">@L("InvoiceTemplate")</label>
                                <select class="form-control" name="InvoiceTemplate" id="InvoiceTemplate" asp-items="@Html.GetEnumSelectList(Model.Settings.Billing.InvoiceTemplate)"></select>
                            </div>
                            @if (await FeatureChecker.IsEnabledAsync(AppFeatures.QuickbooksFeature))
                            {
                                <div class="form-group">
                                    <label for="QuickbooksIntegrationKind" class="required-label">@L("AccountingIntegration")</label>
                                    <select class="form-control" name="QuickbooksIntegrationKind" id="QuickbooksIntegrationKind" asp-items="@Html.GetEnumSelectList(Model.Settings.Billing.QuickbooksIntegrationKind ?? QuickbooksIntegrationKind.None)"></select>
                                </div>
                                <input type="hidden" id="IsQuickbooksConnected" name="IsQuickbooksConnected" asp-for="Settings.Billing.IsQuickbooksConnected" />
                                <div id="quickbooksGeneralBlock" style="display: none">
                                    <div class="form-group">
                                        <label for="QuickbooksInvoiceNumberPrefix">@L("QuickbooksInvoiceNumberPrefix")</label>
                                        <input id="QuickbooksInvoiceNumberPrefix" type="text" class="form-control" name="QuickbooksInvoiceNumberPrefix" value="@Model.Settings.Billing.QuickbooksInvoiceNumberPrefix" maxlength="4">
                                    </div>
                                </div>
                                <div id="quickbooksConnectBlock" style="display: none">
                                    <div class="form-group">
                                        <button type="button" class="btn btn-primary" id="QuickbooksConnectButton">@L("Connect")</button>
                                    </div>
                                </div>
                                <div id="quickbooksConnectedBlock" style="display: none">
                                    <div class="form-group">
                                        <button type="button" class="btn btn-primary" id="QuickbooksVerifyConnectionButton">@L("VerifyConnection")</button>
                                        <button type="button" class="btn btn-default" id="QuickbooksOnlineSettingsButton">@L("OpenQuickbooksOnlineSettings")</button>
                                        <button type="button" class="btn btn-default" id="QuickbooksDisconnectButton">@L("Disconnect")</button>
                                    </div>
                                </div>
                                <div id="quickbooksDesktopBlock" style="display: none">
                                    <div class="row">
                                        <div class="col-sm-6 form-group">
                                            <label for="QbdTaxAgencyVendorName" class="required-label">@L("TaxAgencyVendorName")</label>
                                            <input id="QbdTaxAgencyVendorName" type="text" class="form-control" name="QbdTaxAgencyVendorName" value="@Model.Settings.Billing.QbdTaxAgencyVendorName" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 form-group">
                                            <label for="QbdDefaultIncomeAccountName"><span class="required-label">@L("DefaultIncomeAccountName")</span> <i class="fa fa-info-circle text-primary tooltip-icon" title="@L("DefaultIncomeAccountInfo")"></i></label>
                                            <input id="QbdDefaultIncomeAccountName" type="text" class="form-control" name="QbdDefaultIncomeAccountName" value="@Model.Settings.Billing.QbdDefaultIncomeAccountName" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 form-group">
                                            <label for="QbdDefaultIncomeAccountType" class="required-label">@L("DefaultIncomeAccountType"):</label>
                                            <select id="QbdDefaultIncomeAccountType" class="form-control" name="QbdDefaultIncomeAccountType" asp-for="Settings.Billing.QbdDefaultIncomeAccountType" asp-items="Model.Settings.Billing.QbdIncomeAccountTypes.Select(x => new SelectListItem(x.Name, x.Id)).ToList()" required>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 form-group">
                                            <label for="QbdAccountsReceivableAccountName" class="required-label">@L("AccountsReceivableAccountName")</label>
                                            <input id="QbdAccountsReceivableAccountName" type="text" class="form-control" name="QbdAccountsReceivableAccountName" value="@Model.Settings.Billing.QbdAccountsReceivableAccountName" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6 form-group">
                                            <label for="QbdTaxAccountName" class="required-label">@L("TaxAccountName")</label>
                                            <input id="QbdTaxAccountName" type="text" class="form-control" name="QbdTaxAccountName" value="@Model.Settings.Billing.QbdTaxAccountName" required>
                                        </div>
                                    </div>
                                </div>
                            }
                        </form>
                    </div>
                    <div class="tab-pane" id="SettingsFuelTab">
                        <h5>@L("Fuel")</h5>
                        <form id="FuelSettingsForm" class="m-form">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group margin-top-20">
                                        <label for="ShowFuelSurcharge" class="m-checkbox col-lg-12">
                                            <input id="ShowFuelSurcharge" type="checkbox" name="ShowFuelSurcharge" value="true" checked="@(Model.Settings.Fuel.ShowFuelSurcharge ? "checked" : null)">
                                            @L("ShowFuelSurcharge")
                                            <span></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div id="FuelSurchargeContainer" @Html.StyleDisplayNone(!Model.Settings.Fuel.ShowFuelSurcharge)>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group margin-top-20">
                                            <div class="m-radio-list">
                                                <label>@L("ShowFuelSurchargeOnInvoice")</label>
                                                <label class="m-radio">
                                                    <input type="radio" name="ShowFuelSurchargeOnInvoice" value="@ShowFuelSurchargeOnInvoiceEnum.LineItemPerTicket.ToIntString()" checked="@(Model.Settings.Fuel.ShowFuelSurchargeOnInvoice == ShowFuelSurchargeOnInvoiceEnum.LineItemPerTicket ? "checked" : null)"> Line item per ticket
                                                    <span></span>
                                                </label>
                                                <label class="m-radio">
                                                    <input type="radio" name="ShowFuelSurchargeOnInvoice" value="@ShowFuelSurchargeOnInvoiceEnum.SingleLineItemAtTheBottom.ToIntString()" checked="@(Model.Settings.Fuel.ShowFuelSurchargeOnInvoice == ShowFuelSurchargeOnInvoiceEnum.SingleLineItemAtTheBottom ? "checked" : null)"> Single line item at the bottom
                                                    <span></span>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="form-group margin-top-20">
                                            <label for="ItemIdToUseForFuelSurchargeOnInvoice" class="required-label">@L("ItemToUseForFuelSurchargeOnInvoice")</label>
                                            <div class="input-group">
                                                <select class="form-control" id="ItemIdToUseForFuelSurchargeOnInvoice" name="ItemIdToUseForFuelSurchargeOnInvoice">
                                                    <option value="">Select an item</option>
                                                    @if (Model.Settings.Fuel.ItemIdToUseForFuelSurchargeOnInvoice > 0)
                                                    {
                                                        <option value="@Model.Settings.Fuel.ItemIdToUseForFuelSurchargeOnInvoice" selected>@Model.Settings.Fuel.ItemNameToUseForFuelSurchargeOnInvoice</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row align-items-center margin-top-20 margin-bottom-10">
                                    <div class="col-lg-7">
                                        <h5 class="mb-0">@L("FuelSurchargeCalculation")</h5>
                                    </div>
                                    <div class="col-lg-5 text-right">
                                        <button type="button" id="AddNewFuelSurchargeCalculation" class="btn btn-primary"><i class="fa fa-plus"></i> @L("AddNew")</button>
                                    </div>
                                </div>
                                <div id="FuelSurchargeCalculationList"></div>
                            </div>
                        </form>
                    </div>

                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.GpsIntegrationFeature))
                    {
                        await Html.RenderPartialAsync("_GpsIntegrationSettings", Model.Settings.GpsIntegration);
                    }
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowPaymentProcessingFeature))
                    {
                        await Html.RenderPartialAsync("_PaymentSettings", Model.Settings.Payment);
                    }
                    @if (await FeatureChecker.IsEnabledAsync(false, AppFeatures.GpsIntegrationFeature, AppFeatures.SmsIntegrationFeature, AppFeatures.DispatchingFeature))
                    {
                        await Html.RenderPartialAsync("_DispatchingAndMessagingSettings", Model.Settings.DispatchingAndMessaging);
                    }
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowLeaseHaulersFeature))
                    {
                        await Html.RenderPartialAsync("_LeaseHaulerSettings", Model.Settings.LeaseHaulers);
                    }
                    <partial name="_TimeAndPaySettings" model="Model.Settings.TimeAndPay" />
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowImportingTruxEarnings))
                    {
                        await Html.RenderPartialAsync("_TruxSettings", Model.Settings.Trux);
                    }
                    @if (await FeatureChecker.IsEnabledAsync(AppFeatures.AllowImportingLuckStoneEarnings))
                    {
                        await Html.RenderPartialAsync("_LuckStoneSettings", Model.Settings.LuckStone);
                    }
                </div>
            </div>
        </div>
    </div>
</div>

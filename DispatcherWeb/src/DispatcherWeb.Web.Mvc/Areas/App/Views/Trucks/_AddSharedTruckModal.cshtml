@using System.Threading.Tasks
@using Abp.Configuration
@using DispatcherWeb.Configuration
@using DispatcherWeb.Infrastructure.Extensions
@using DispatcherWeb.Web.Areas.App.Models.Common.Modals
@using DispatcherWeb.Trucks.Dto
@model AddSharedTruckListDto
@await Html.PartialAsync("~/Areas/app/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel("Share Truck"))

<div class="modal-body">   
    <form role="form" novalidate class="form-validation">
        <input type="hidden" asp-for="TruckId" />
        <div class="form-group">
            <label class="control-label required-label" for="Date">@L("BeginningAndEndDate")</label>
            <input class="form-control" id="Date" readonly type="text" required autocomplete="off">
            <input type="hidden" asp-for="StartDate" />
            <input type="hidden" asp-for="EndDate" />
        </div>
        @if(await SettingManager.GetSettingValueAsync<bool>(AppSettings.General.UseShifts))
        {
            <div class="form-group">
                <label class="control-label required-label" for="Shift">@L("Shift")</label>
                <select class="form-control" id="Shift" name="Shift" asp-items="@(await SettingManager.GetShiftSelectList()).Select(x => new SelectListItem(x.Name, x.Id, true))" multiple="multiple" required></select>
            </div>
        }
        <div class="form-group">
            <label class="required-label">@L("Office")</label>
            <select class="form-control" name="OfficeId" required>
                <option value="">Select an option</option>
                @foreach(var item in Model.Offices)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
        </div>
    </form>
</div>

@await Html.PartialAsync("~/Areas/app/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")
